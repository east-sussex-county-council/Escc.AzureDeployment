@echo off

:: Check that this script is being run from the root of a deployment repository.
set VALID=true
if not exist DeployOnAzure.cmd set VALID=false

if %VALID%==false (
	echo.
	echo Usage: UpdateDeploymentScript
	echo.
	echo eg UpdateDeploymentScript 
	echo.
	echo This script should be run from a sibling folder of Escc.AzureDeployment which contains
	echo a deployment script named DeployOnAzure.cmd.
	echo.
	goto exit
)

:: Get the current folder to come back to, and the script folder, even 
:: if executed from elsewhere, so we can call other scripts

set ESCC_DEPLOYMENT_START_PATH=%cd%
for /f %%i in ("%0") do set ESCC_DEPLOYMENT_SCRIPTS=%%~dpi

:: We have to use call for git commands otherwise the script terminates.

:: Switch to the script folder, run git pull to ensure the scripts are up-to-date,
:: then switch back to update the deployment script

echo.
echo ------------------------------------------------------
echo Ensuring deployment scripts are up-to-date
echo ------------------------------------------------------
echo.

cd /d %ESCC_DEPLOYMENT_SCRIPTS%
call git pull origin master
cd /d %ESCC_DEPLOYMENT_START_PATH%


:: Update the Kudu deployment script in case its source files have changed.
:: Combine 3 files to separate out the part of the script unique to each site.
:: Ensure we're back on the master branch first.

echo.
echo ------------------------------------------------------
echo Updating custom Kudu deployment script
echo ------------------------------------------------------
echo.
if not exist Kudu md Kudu
copy %ESCC_DEPLOYMENT_SCRIPTS%Kudu\GitDownload.cmd Kudu

echo [config] > .deployment
echo command = Kudu\KuduDeploy.cmd >> .deployment

echo :: THIS FILE IS GENERATED BY A SCRIPT. > Kudu\KuduDeploy.cmd
echo. >> Kudu\KuduDeploy.cmd
echo :: To update the content of this file with changes from Escc.AzureDeployment, >> Kudu\KuduDeploy.cmd
echo :: run ..\Escc.AzureDeployment\UpdateDeploymentScript.cmd >> Kudu\KuduDeploy.cmd
echo. >> Kudu\KuduDeploy.cmd
type %ESCC_DEPLOYMENT_SCRIPTS%Kudu\DeployPart1.cmd %ESCC_DEPLOYMENT_SCRIPTS%Kudu\DeployPart3.cmd >> Kudu\KuduDeploy.cmd

call git add .deployment
call git add Kudu\KuduDeploy.cmd
call git add Kudu\GitDownload.cmd
call git commit -m "Updated Kudu deployment script at %date% %time%"

echo.
echo -------------------------------------------------------------------------
echo Deployment script updated. 
echo.
echo Make sure you have a git remote with the URL of your Azure web app's
echo git repository. You can find the URL on the Deployments page for your
echo web app in the Azure portal. Then push this repository to the remote
echo to deploy your code.
echo -------------------------------------------------------------------------
echo.

:exit
exit /b 